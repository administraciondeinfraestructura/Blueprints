name: GCP - Debian 10
version: 6.5
formatVersion: 1
inputs:
  nube:
    type: string
    title: Nube
    oneOf:
      - title: On Premise
        const: 'nube:Z1'
      - title: GCP
        const: 'nube:Z2'
    default: 'nube:Z2'
  nodes:
    title: Cantidad de equipos
    type: integer
    description: Cantidad de Equipos
    pattern: '[0-9]+'
    default: 1
    minimum: 1
    maximum: 5
  imagen:
    type: string
    title: Sistema Operativo
    enum:
      - Debian 10
    default: Debian 10
  flavor:
    title: Tama√±o
    type: string
    oneOf:
      - title: Extra Small (1 vCPU-1 GB)
        const: Extra Small
      - title: Small (1 vCPU-2 GB)
        const: Small
      - title: Medium (2 vCPU-2 GB)
        const: Medium
      - title: Large (2 vCPU-4 GB)
        const: Large
      - title: Extra Large (2 vCPU-8 GB)
        const: Extra Large
    default: Small
  environment:
    type: string
    title: Entorno
    oneOf:
      - title: Desarrollo
        const: 'env:D'
      - title: Pre-Produccion
        const: 'env:PP'
      - title: Produccion
        const: 'env:P'
      - title: Testing
        const: 'env:T'
    default: 'env:D'
  network:
    type: string
    title: Red
    oneOf:
      - title: NO DMZ
        const: 'RED:NODMZ'
      - title: DMZ
        const: 'RED:DMZ'
    default: 'RED:NODMZ'
  backup:
    type: string
    title: Politica de Backup
    enum:
      - Diario
      - Semanal
      - Quincenal
      - Mensual
      - Sin Backup
    default: Sin Backup
resources:
  Cloud_Machine_1:
    type: Cloud.Machine
    properties:
      name: '${substring(input.environment,4) + "LNX" + substring(input.nube,5)}'
      ####image: '${input.imagen}'
      image: GCP - Debian 10
      flavor: '${input.flavor}'
      customizationSpec: Linux
      snapshotLimit: 1
      count: '${input.nodes}'
      constraints:
        - tag: '${input.environment}'
        - tag: '${input.nube}'
      networks:
        - network: '${resource.Cloud_Network.id}'
          assignPublicIpAddress: false
          tags:
            - key: Entorno
              value: '${substring(input.environment , 4)}'
            - key: Proyecto
              value: '${env.projectName}'
            - key: Network
              value: '${input.network}'
      storage:
        constraints:
          - tag: '${input.environment}'
          - tag: '${input.nube}'
      resourceGroupName: '${"VRA8-"+ (env.projectName)}'
      tags:
  ###- key: backup
  ###  value: '${input.backup}'
        - key: entorno
          value: '${to_lower(substring(input.environment , 4))}'
        - key: proyecto
          value: '${to_lower(env.projectName)}'
  Cloud_Network:
    type: Cloud.Network
    properties:
      networkType: existing
      constraints:
        - tag: '${input.environment}'
        - tag: '${input.network}'
        - tag: '${input.nube}'
